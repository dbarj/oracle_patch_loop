# For main.yml, the pre_prepare_dump_file.yml won't be called.
# So dump_stat_result may be false if the dump was created on this execution.
- name: "Check if {{ shared_folder }}/{{ dump_file_prefix }}.dmp exists"
  stat:
    path: "{{ shared_folder }}/{{ dump_file_prefix }}.dmp"
  register: dump_stat_result

# This dump_stat_result.stat.exists block is required only because this code is used
# for both the extraction (main.yml), where the file obviusly exists, but also on the
# loader_adb.yml.

- block:

  - name: Upload expdp to OCI Bucket
    include_role:
      name: oci_object_storage_object
    vars:
      oci_upload_bucket: "{{ oci_adb_bucket }}"
      oci_object_name: "{{ oci_upload_file | basename }}"
      oci_upload_file: "{{ shared_folder }}/{{ dump_file_prefix }}.dmp"
      object_action: "create"

  - name : Define source schema
    set_fact:
      dump_user_int: "{{ dump_user }}"
    when: db_version == "11.2.0.4"

  - name : Define source schema
    set_fact:
      dump_user_int: "c##{{ dump_user }}"
    when: db_version != "11.2.0.4"

  # This is done because expdp/impdp still can't handle Credential using oracle native authentication (instance principal, tenancy id, etc), only swift.
  - include: tasks/local_sqlplus.yml
    vars:
      sql_param : { task_action : "Copy file from Bucket to Oracle Directory" ,
                    cred : "{{ oci_adb_connection_tns }}" ,
                    file : "adb_oradir_copy_file.sql" ,
                    folder : "user_scripts/odbfcl/adb_load_expdp" ,
                    params : "'{{ oci_adb_credential }}' '{{ oci_adb_os_url_prefix }}/{{ dump_file_prefix }}.dmp'"
                  }

  - name: Remove expdp from OCI Bucket
    include_role:
      name: oci_object_storage_object
    vars:
      oci_upload_bucket: "{{ oci_adb_bucket }}"
      oci_object_name: "{{ dump_file_prefix }}.dmp"
      object_action: "remove"

  # This is done because expdp/impdp still can't handle Credential using oracle native authentication (instance principal, tenancy id, etc), only swift.
  # - name: Import DB Tables
  #   shell: |
  #       impdp \
  #       userid={{ oci_adb_connection_tns }} \
  #       directory=data_pump_dir \
  #       credential='{{ oci_adb_credential }}' \
  #       remap_schema='{{ dump_user_int }}:{{ oci_adb_transient_user }}' \
  #       parallel=16 \
  #       table_exists_action=truncate \
  #       dumpfile={{ oci_adb_os_url_prefix }}/{{ dump_file_prefix }}.dmp > "{{ output_folder }}/expdp/{{ dump_file_prefix }}.imp.log" 2>&1
  #   register: shell_output

  - name: Import DB Tables
    shell: |
        impdp \
        userid={{ oci_adb_connection_tns }} \
        directory=data_pump_dir \
        remap_schema='{{ dump_user }}:{{ oci_adb_transient_user }},c##{{ dump_user }}:{{ oci_adb_transient_user }}' \
        parallel=16 \
        table_exists_action=truncate \
        content=data_only \
        logfile={{ dump_file_prefix }}.log \
        dumpfile={{ dump_file_prefix }}.dmp > "{{ output_folder }}/expdp/{{ dump_file_prefix }}.imp.log" 2>&1
    register: shell_output
    ignore_errors: yes

  - include: tasks/local_sqlplus.yml
    vars:
      sql_param : { task_action : "Remove dumpfile from Oracle Directory" ,
                    cred : "{{ oci_adb_connection_tns }}" ,
                    file : "adb_oradir_remove_file.sql" ,
                    folder : "user_scripts/odbfcl/adb_load_expdp" ,
                    params : "'{{ dump_file_prefix }}.dmp'"
                  }
  
  - include: tasks/local_sqlplus.yml
    vars:
      sql_param : { task_action : "Remove logfile from Oracle Directory" ,
                    cred : "{{ oci_adb_connection_tns }}" ,
                    file : "adb_oradir_remove_file.sql" ,
                    folder : "user_scripts/odbfcl/adb_load_expdp" ,
                    params : "'{{ dump_file_prefix }}.log'"
                  }

  - name: Import error output
    debug: msg="{{ shell_output.stderr_lines }}"
    when: shell_output.rc != 0

  - name: impdp error
    fail:
      msg: "Check {{ output_folder }}/expdp/{{ dump_file_prefix }}.imp.log."
    when: shell_output.rc != 0 and shell_output.rc != 5

  - name: Check impdp error
    shell: |
        set -e +o pipefail
        v_tot=$(cat "{{ output_folder }}/expdp/{{ dump_file_prefix }}.imp.log" | grep 'ORA-' | grep -v 'ORA-39146' | wc -l)
        if [ $v_tot -ne 0 ]
        then
          exit 1
        else
          exit 0
        fi
    when: shell_output.rc == 5

  when: dump_stat_result.stat.exists