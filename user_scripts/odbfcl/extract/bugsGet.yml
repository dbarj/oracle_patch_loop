- name : Define bugs_fixed filename and folder
  set_fact:
    bugs_fixed_file: "bugs_{{ db_version }}_{{ patch.base_ru | default('') }}{{ patch.type }}_{{ patch.id }}.txt"
    bugs_fixed_folder: "{{ output_folder }}/bugsfixed"

- name: "Check if {{ bugs_fixed_folder }}/{{ bugs_fixed_file }} exists"
  stat:
    path: "{{ bugs_fixed_folder }}/{{ bugs_fixed_file }}"
  register: bugs_fixed_stat_result

# Will skip all the rest if the bugs_fixed file exists
- block :

  - name: Collect bugs from ORACLE_HOME
    shell: |
        set -eo pipefail

        export ORACLE_HOME ORACLE_SID

        ./opatch lsinv -bugs_fixed |
        # Remove lines before this entry (inclusive)
        sed '1,/^List of Bugs fixed by Installed Patches/d' |
        # Remove lines before this entry (inclusive)
        sed '1,/^---/d' |
        # Remove lines after this entry (inclusive)
        sed '/^---/Q' |
        # Remove empty lines
        sed '/^$/d' |
        # Remove breaks from lines not starting with number
        sed ':a $!{N; ba}; s/\n\+/\n/g; s/\n\([^0-9]\)/\1/g' |
        # Remove double spaces
        sed -E 's/[[:space:]]+/ /g' |
        # Remove date columns
        awk '{$3=$4=$5=$6=$7=$8=""; print $0}' |
        # Remove double spaces again after column removal
        sed -E 's/[[:space:]]+/ /g' |
        # Replace first space per tab
        sed 's/ /'$'\t''/' |
        # Replace first space per tab (that was the second)
        sed 's/ /'$'\t''/' > {{ VM_folder }}/{{ bugs_fixed_file }}

    environment:
      ORACLE_HOME: "{{ dbhome_locl }}"
      ORACLE_SID: "{{ mysid }}"
    args:
      chdir: "{{ dbhome_locl }}/OPatch"
    register: shell_output
    become: true
    become_user: oracle
    delegate_to: "{{ vm_ip_address }}"

  - name: Copy {{ bugs_fixed_file }} to repository
    copy:
      src: "{{ shared_folder }}/{{ bugs_fixed_file }}"
      dest: "{{ bugs_fixed_folder }}"

  - name : "Remove file {{ bugs_fixed_file }}"
    file:
      state: absent
      path: "{{ shared_folder }}/{{ bugs_fixed_file }}"

  when: not bugs_fixed_stat_result.stat.exists