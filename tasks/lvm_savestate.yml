## This code will take a snapshot named "vm_snapshot" for the VM. It will later be used as a base release for OJVMs.

# Drop old machine image if exists
- name: "Drop old LVM snapshots for previous RU or PSU if exists."
  shell: |
       v_snapshot="{{ save_snapshot }}"
       v_disk_vg='/dev/mapper/vg_u01'
       for lv_name in `lvs --noheadings -o lv_name | grep -E 'PSU|RU' | grep -v ${v_snapshot}`
       do
         lvremove -f ${v_disk_vg}-${lv_name}
       done
  become: true
  become_user: root
  delegate_to: "{{ vm_ip_address }}"

# Save latest machine image if not already
- name: "Create new LVM snapshot \"{{ save_snapshot }}\" if not exists."
  shell: |
       v_snapshot="{{ save_snapshot }}"
       v_disk='/dev/mapper/vg_u01-lv_u01'
       if ! $(lvs -a | grep -q "${v_snapshot}")
       then
         v_size=$(lvs --noheadings -o seg_size ${v_disk})
         lvcreate --size ${v_size} --snapshot --name lv_u01_${v_snapshot} ${v_disk}
       fi
  become: true
  become_user: root
  delegate_to: "{{ vm_ip_address }}"