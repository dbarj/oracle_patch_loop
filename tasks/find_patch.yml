# If bucket
- block:

  - name: List files in OCI Bucket
    include_role:
      name: oci_object_storage_object_facts
    vars:
      object_action: "list"
      oci_list_bucket: "{{ patch_location_bucket }}"

  # For debugging
  # - name: Check if patch is in the bucket
  #   debug: msg="{{ oci_action.objects | map(attribute='name') | select('search', my_query) | list }}"
  #   vars:
  #     my_query: "p{{ patch.patch_number }}"
  
  - name: Download file from OCI Bucket
    shell: |
        export LC_ALL=C.UTF-8
        export LANG=C.UTF-8
        oci os object get --bucket-name {{ patch_location_bucket }} --name {{ oci_download_file }} --file {{ patch_location_path }}/{{ oci_download_file | basename }}
    vars:
      my_query: "p{{ patch.patch_number }}"
      oci_download_file: "{{ oci_action.objects | map(attribute='name') | select('search', my_query) | list | first }}"
    when: oci_action.objects | map(attribute='name') | select('search', my_query) | list | length > 0

  when: patch_location_type == "bucket"

- name: Finding Patch File
  find:
    paths:     "{{ patch_location_path }}"
    patterns:  "p{{ patch.patch_number }}_{{ db_version | regex_replace('\\.','') }}0_Linux-x86-64.zip"
    recurse:   "yes"
    file_type: "file"
  register: tmp_find_result
  when: patch.type != "MRP"

# Put the value inside another variable to avoid it from getting replaced with "skip_reason": "Conditional result was False"
- set_fact: find_result="{{tmp_find_result}}"
  when: tmp_find_result is not skipped

- name: Finding Patch File
  find:
    paths:     "{{ patch_location_path }}"
    patterns:  "p{{ patch.patch_number }}_*DBRU_Linux-x86-64.zip"
    recurse:   "yes"
    file_type: "file"
  register: tmp_find_result
  when: patch.type == "MRP"

# Put the value inside another variable to avoid it from getting replaced with "skip_reason": "Conditional result was False"
- set_fact: find_result="{{tmp_find_result}}"
  when: tmp_find_result is not skipped

- name : Define patch_file_path
  set_fact:
    patch_file_path: "{{ find_result.files[0].path }}"
  when: find_result.files[0] is defined
