- block:

  - name: "Get password for {{ downloader_user }}"
    pause:
      prompt: "Enter password for {{ downloader_user }}: "
      echo: false
    register: input

  - name: Set Password
    set_fact:
      downloader_pass: "{{ input.user_input }}"

  when: downloader_pass is undefined

- name: "Calling {{ downloader_tool }}"
  shell: |
    [ ! -d "{{ db_version }}/{{ patch.type }}" ] && mkdir -p "{{ db_version }}/{{ patch.type }}"
    cd "{{ db_version }}/{{ patch.type }}"
    $ORACLE_HOME/jdk/bin/java -jar {{ downloader_tool }} \
    patch={{ patch.patch_number }} \
    platform=226P \
    download=all \
    silent=yes \
    regexp='.*_{{ db_version | replace('.','') }}0_.*' \
    MOSUser={{ downloader_user }} \
    MOSPass='{{ downloader_pass }}'
  args:
    chdir: "{{ patch_location_path }}"

# If block storage:
- block:

  - name: Get patch file name to upload to OS
    find:
      paths:     "{{ patch_location_path }}"
      patterns:  "p{{ patch.patch_number }}_{{ db_version | regex_replace('\\.','') }}0_Linux-x86-64.zip"
      file_type: "file"
    register: get_name

  - name: 
    include_role:
      name: oci_object_storage_object
    vars:
      oci_upload_file: "{{ get_name.files[0].path }}"
      oci_object_name: "{{ db_version }}/{{ patch.type }}/{{ get_name.files[0].path | basename }}"
      oci_upload_bucket: "{{ patch_location_bucket }}"
      object_action: "create"
    when: get_name.files[0] is defined

  when: patch_location_type == "bucket"